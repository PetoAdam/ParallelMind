name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build devcontainer image (no load/push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: false
          load: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            INSTALL_PY_DEPS=0

      - name: Configure and build in official CUDA container
        run: |
          docker run --rm \
            -v "$PWD":/workspace \
            -w /workspace \
            nvidia/cuda:12.2.2-devel-ubuntu20.04 \
            bash -lc "export DEBIAN_FRONTEND=noninteractive TZ=UTC; \
                      ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime; \
                      apt-get update && \
                      apt-get install -y --no-install-recommends tzdata && \
                      dpkg-reconfigure -f noninteractive tzdata && \
                      apt-get install -y --no-install-recommends build-essential ca-certificates curl tar && \
                      CMAKE_VER=4.1.0 && \
                      curl -fsSL -o /tmp/cmake.tgz https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-linux-x86_64.tar.gz && \
                      mkdir -p /opt && tar -xzf /tmp/cmake.tgz -C /opt && \
                      export PATH=/opt/cmake-${CMAKE_VER}-linux-x86_64/bin:$PATH && \
                      cmake --version && \
                      mkdir -p build && cd build && cmake .. && make -j"

      - name: Run unit tests (exclude dataset-dependent tests)
        run: |
          docker run --rm \
            -v "$PWD":/workspace \
            -w /workspace/build \
            nvidia/cuda:12.2.2-devel-ubuntu20.04 \
            bash -lc "ctest --output-on-failure -E test_npy_reader"
